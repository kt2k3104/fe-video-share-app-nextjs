"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";

import "@/app/globals.css";
import { Provider } from "@/components/ui/provider";
import { Box, HStack } from "@chakra-ui/react";
import { useEffect } from "react";
import useUserInfo, { UserInfoState } from "@/hooks/useUserInfo";
import requestApi from "@/utils/api";
import Header from "./components/Header";
import Sidebar from "./components/Sidebar";
import { useRouter } from "next/navigation";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Video Share App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const setFollowers = useUserInfo(
    (state: UserInfoState) => state.setFollowers
  );
  const setFollowings = useUserInfo(
    (state: UserInfoState) => state.setFollowings
  );
  const setStrangeUsers = useUserInfo(
    (state: UserInfoState) => state.setStrangeUsers
  );
  const setUserInfo = useUserInfo((state: UserInfoState) => state.setUserInfo);

  const router = useRouter();

  useEffect(() => {
    const initLogin = async () => {
      try {
        const access_token = localStorage.getItem("access_token");
        if (access_token) {
          const { data: usersData } = await requestApi("users/me", "GET", null);
          setUserInfo({
            id: usersData.data.user.id,
            full_name: usersData.data.user.full_name,
            username: usersData.data.user.username,
            avatar_url: usersData.data.user.avatar_url,
            bio: usersData.data.user.bio,
          });
          const { data: followersData } = await requestApi(
            "users/me/followers",
            "GET",
            null
          );
          setFollowers(followersData.data.followers);

          const { data: followingsData } = await requestApi(
            "users/me/followings",
            "GET",
            null
          );
          setFollowings(followingsData.data.followings);
        }
      } catch (error) {
        console.log(error);
        // localStorage.removeItem("access_token");
      }
    };
    initLogin();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  useEffect(() => {
    document.title = "Video Share App";
  }, []);

  return (
    <html
      lang="en"
      suppressHydrationWarning
      style={{
        padding: "0px",
      }}
    >
      <body className={inter.className}>
        <Provider>
          <Box
            borderRadius={"16px"}
            w={"calc(100vw - 20px)"}
            h={"calc(100vh - 20px)"}
            overflow={"hidden"}
          >
            <Header />
            <HStack
              p={"0"}
              w={"100%"}
              h={"calc(100% - 90px)"}
              padding={"0"}
              gap={"0"}
            >
              <Sidebar />
              {children}
            </HStack>
          </Box>
        </Provider>
      </body>
    </html>
  );
}
